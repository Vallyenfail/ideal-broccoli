import math
import argparse

parse = argparse.ArgumentParser(description='This is a payment calculator, input type and all the parameters to \
calculate something')

parse.add_argument('--type')
parse.add_argument('--principal')
parse.add_argument('--interest')
parse.add_argument('--periods')
parse.add_argument('--payment')

args = parse.parse_args()

parameters = [args.type, args.principal, args.interest, args.periods, args.payment]
counter_arg = 0

for arg in range(1, 5):
    if parameters[arg] != None and float(parameters[arg]) < 0:
        print('Incorrect parameters')
        exit()

for arg in parameters:
    if arg == None:
        counter_arg += 1

if counter_arg > 1 or (args.type != 'diff' and args.type != 'annuity') or (args.type == 'diff' and args.payment != None) \
        or args.interest == None:
    print('Incorrect parameters')
else:
    if args.type == 'annuity':
        if args.periods == None:
            principal = int(args.principal)
            monthly_payment = float(args.payment)
            interest = float(args.interest)
            interest = interest / (12 * 100)

            num_of_payments = math.ceil(math.log(monthly_payment / (monthly_payment - interest * principal), 1 + interest))
            overpayment = int(monthly_payment * num_of_payments - principal)

            if num_of_payments == 12:
                print('It will take 1 year to repay this loan!')
            elif num_of_payments > 12:
                year = num_of_payments // 12
                month = num_of_payments - year * 12
                if year > 1 and month == 1:
                    print(f'It will take {year} years and {month} month to repay the loan!')
                elif year == 1 and month == 1:
                    print(f'It will take {year} year and {month} month to repay the loan!')
                elif year == 1 and month > 1:
                    print(f'It will take {year} year and {month} months to repay the loan!')
                elif year > 1 and month == 0:
                    print(f'It will take {year} years to repay the loan!')
                else:
                    print(f'It will take {year} years and {month} months to repay the loan!')
            elif 12 > num_of_payments > 1:
                print('It will take {} months to repay the loan!'.format(num_of_payments))
            else:
                print('It will take 1 month to repay the loan!')
            print(f'Overpayment = {overpayment}')
        elif args.payment == None:
            principal = int(args.principal)
            interest = float(args.interest)
            interest = interest / (12 * 100)
            num_of_payments = int(args.periods)

            monthly_payment = math.ceil(principal * ((interest * (1 + interest) ** num_of_payments) / ((1 + interest) ** num_of_payments - 1)))
            overpayment = int(monthly_payment * num_of_payments - principal)

            print(f'Your annuity payment = {monthly_payment}!')
            print(f'Overpayment = {overpayment}')
        elif args.principal == None:
            monthly_payment = float(args.payment)
            interest = float(args.interest)
            interest = interest / (12 * 100)
            num_of_payments = int(args.periods)

            principal = math.floor(monthly_payment / (interest * (1 + interest) ** num_of_payments / ((1 + interest) ** num_of_payments - 1)))
            overpayment = int(monthly_payment * num_of_payments - principal)

            print(f'Your loan principal = {principal}!')
            print(f'Overpayment = {overpayment}')
    elif args.type == 'diff':
        principal = int(args.principal)
        interest = float(args.interest)
        interest = interest / (12 * 100)
        num_of_payments = int(args.periods)
        overpayment = 0

        for m in range(1, num_of_payments + 1):
            monthly_payment = math.ceil(principal / num_of_payments + interest * (principal - principal * (m - 1) / num_of_payments))
            print(f'Month {m}: payment is {monthly_payment}')
            overpayment += monthly_payment
        overpayment = overpayment - principal
        print(f'''
Overpayment = {overpayment}''')
